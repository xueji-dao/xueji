/**
 * Jotai 使用流程：
 * 1. 创建原子 (atom) - 定义状态
 * 2. 使用 useAtom - 读写状态
 * 3. 使用 useAtomValue - 只读状态
 * 4. 使用 useSetAtom - 只写状态
 * 5. 派生原子 - 基于其他原子计算新值
 * 6. 异步原子 - 处理异步数据
 * 7. 原子存储 - 持久化到 localStorage
 */

import { Suspense } from 'react'
import { Metadata } from 'next'

import AsyncAtomExample from './_components/AsyncAtomExample'
import { Counter } from './_components/Counter'
import { ReadonlyAtomExample } from './_components/ReadonlyAtomExample'
import ResetAtomExample from './_components/ResetAtomExample'
import Canvas from './Canvas'

export const metadata: Metadata = {
  title: 'with-jotai',
  description: 'Generated by create next app',
}

export default function Home() {
  return (
    <div className="min-h-screen">
      <h1 className="mb-8 text-center text-4xl font-bold">With Jotai example</h1>
      <main className="flex flex-col items-center gap-8 py-8">
        <div className="h-96 w-full overflow-hidden rounded-lg border border-gray-300">
          <Canvas />
        </div>
        <div className="mb-8">按住鼠标拖动生成点</div>

        <div className="p-4">
          <Counter />
          <ReadonlyAtomExample />
          <Suspense fallback={<div className="p-4 text-center">Loading async atom...</div>}>
            <AsyncAtomExample />
          </Suspense>
          <ResetAtomExample />
        </div>
      </main>
    </div>
  )
}
